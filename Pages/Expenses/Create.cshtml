@page
@using ExpensiveControlApp.Models
@model ExpensiveControlApp.Pages.Expenses.CreateModel
@{
    ViewData["Title"] = "Registrar Gasto";
}

<h1>Registrar Gasto</h1>
@if (ViewData["OverbudgetWarnings"] is List<OverbudgetWarning> warnings && warnings.Any())
{
    <div class="alert alert-warning">
        <strong>¡Presupuesto sobregirado!</strong>
        <ul>
            @foreach (var w in warnings)
            {
                <li>
                    Tipo: <strong>@w.ExpenseTypeName</strong> |
                    Presupuesto: @w.BudgetedAmount.ToString("C") |
                    Ejecutado: @w.ExecutedAmount.ToString("C") |
                    Exceso: @w.OverAmount.ToString("C")
                </li>
            }
        </ul>
    </div>
}
<hr />
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <label asp-for="ExpenseHeader.Date" class="form-label"></label>
            <input asp-for="ExpenseHeader.Date" class="form-control" />
        </div>
        <div class="col-md-6">
            <label asp-for="ExpenseHeader.MonetaryFundId" class="form-label"></label>
            <select asp-for="ExpenseHeader.MonetaryFundId" asp-items="Model.MonetaryFunds" class="form-control"></select>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-6">
            <label asp-for="ExpenseHeader.CommerceName" class="form-label"></label>
            <input asp-for="ExpenseHeader.CommerceName" class="form-control" />
        </div>
        <div class="col-md-6">
            <label asp-for="ExpenseHeader.DocumentType" class="form-label"></label>
            <select asp-for="ExpenseHeader.DocumentType" asp-items="Model.DocumentTypes" class="form-control"></select>
        </div>
    </div>

    <div class="mt-3">
        <label asp-for="ExpenseHeader.Observations" class="form-label"></label>
        <textarea asp-for="ExpenseHeader.Observations" class="form-control"></textarea>
    </div>

    <hr />
    <h4>Detalle de Gastos</h4>
    <table class="table" id="detailsTable">
        <thead>
            <tr>
                <th>Tipo de Gasto</th>
                <th>Monto</th>
                <th></th>
            </tr>
        </thead>
 <tbody>
        <tr class="d-none" id="detail-row-template">
            <td>
                <select class="form-control expenseTypeSelect"
                        asp-items="Model.ExpenseTypes">
                </select>
            </td>
            <td>
                <input type="number" step="0.01" required class="form-control amountInput" />
            </td>
            <td>
                <button type="button" class="btn btn-sm btn-danger" onclick="this.closest('tr').remove()">Eliminar</button>
            </td>
        </tr>
    </tbody>
    </table>
    <button type="button" class="btn btn-secondary" onclick="addDetailRow()">Agregar Gasto</button>

    <hr />
    <input type="submit" value="Guardar" class="btn btn-primary mt-3" />
    <a asp-page="Index" class="btn btn-secondary mt-3">Cancelar</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function addDetailRow() {
            const index = document.querySelectorAll("#detailsTable tbody tr:not(.d-none)").length;

            const template = document.getElementById("detail-row-template");
            const clone = template.cloneNode(true);
            clone.classList.remove("d-none");

            // Asigna los name esperados para el model binder
            clone.querySelector(".expenseTypeSelect").name = `ExpenseHeader.Details[${index}].ExpenseTypeId`;
            clone.querySelector(".amountInput").name = `ExpenseHeader.Details[${index}].Amount`;

            document.querySelector("#detailsTable tbody").appendChild(clone);
        }
    </script>
}